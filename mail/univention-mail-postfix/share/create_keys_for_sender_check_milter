#!/usr/bin/python2.7
# -*- coding: utf-8 -*-
#
# Copyright 2018 Univention GmbH
#
# http://www.univention.de/
#
# All rights reserved.
#
# The source code of this program is made available
# under the terms of the GNU Affero General Public License version 3
# (GNU AGPL V3) as published by the Free Software Foundation.
#
# Binary versions of this program provided by Univention to you as
# well as other copyrighted, protected or trademarked materials like
# Logos, graphics, fonts, specific documentations and configurations,
# cryptographic keys etc. are subject to a license agreement between
# you and Univention and not subject to the GNU AGPL V3.
#
# In the case you use this program under the terms of the GNU AGPL V3,
# the program is provided in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
# GNU Affero General Public License for more details.
#
# You should have received a copy of the GNU Affero General Public
# License with the Debian GNU/Linux or Univention distribution in file
# /usr/share/common-licenses/AGPL-3; if not, see
# <http://www.gnu.org/licenses/>.

"""
Create private RSA key.
Will backup already existing key file.
"""

import os.path
import shutil
import datetime

from univention.mail.rsa_signature import Signature


RSA_KEY_FILE = '/etc/postfix/sender_check.key'


if os.path.exists(RSA_KEY_FILE):
	backup_path = '{}.{}'.format(RSA_KEY_FILE, datetime.datetime.now().strftime('%Y-%m-%d.%H:%M:%S'))
	print('WARNING: {!r} exists. Backing up to {!r}.'.format(RSA_KEY_FILE, backup_path))
	shutil.copy2(RSA_KEY_FILE, backup_path)

sign_service = Signature(RSA_KEY_FILE)
sign_service.create_keys()
sign_service.store_keys()
