#!/bin/bash
#
# Univention Server
#  network script: modify resolv.conf
#
# Copyright 2018 Univention GmbH
#
# http://www.univention.de/
#
# All rights reserved.
#
# The source code of this program is made available
# under the terms of the GNU Affero General Public License version 3
# (GNU AGPL V3) as published by the Free Software Foundation.
#
# Binary versions of this program provided by Univention to you as
# well as other copyrighted, protected or trademarked materials like
# Logos, graphics, fonts, specific documentations and configurations,
# cryptographic keys etc. are subject to a license agreement between
# you and Univention and not subject to the GNU AGPL V3.
#
# In the case you use this program under the terms of the GNU AGPL V3,
# the program is provided in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
# GNU Affero General Public License for more details.
#
# You should have received a copy of the GNU Affero General Public
# License with the Debian GNU/Linux or Univention distribution in file
# /usr/share/common-licenses/AGPL-3; if not, see
# <http://www.gnu.org/licenses/>.

# Bug #37689: this script is "sourced", not forked; Do not "exit" the process!
test -n "$interface" || return 0
[ "$(ucr get interfaces/${interface}/type)" = dhcp ] || return 0

# Copy original function from /sbin/dhclient-script
eval "$(echo -n 'ucs_orig_';declare -f make_resolv_conf)"
make_resolv_conf () {
	local ns nameserver1= nameserver2= nameserver3=
	eval "$(ucr shell '^nameserver[123]$')"

	# On a joined DNS server the DHCP nameserver is converted to a dns/forwarder
	if	[ -e /var/univention-join/joined ] &&
		[ -n "$(ucr search --brief --non-empty '^nameserver[123]$')" ] &&
		( . /usr/share/univention-lib/base.sh ; is_domain_controller ) &&
		( . /usr/share/univention-lib/ucr.sh ; ! is_ucr_true "nameserver/external" )
	then
		[ "$old_domain_name_servers" != "$new_domain_name_servers" ] ||
			[ "$old_dhcp6_name_servers" = "$new_dhcp6_name_servers" ] ||
			return 0

		# IPv4
		set -- ${new_domain_name_servers:-}  # IFS
		# IPv6
		for ns in ${new_dhcp6_name_servers:-}  # IFS
		do
			set -- ${1:+"$@"} "$(link_local "$ns")"
		done
		# Remove known UCS-domain servers
		for ns in "$@"
		do
			shift
			[ "$ns" = "$nameserver1" ] ||
				[ "$ns" = "$nameserver2" ] ||
				[ "$ns" = "$nameserver3" ] ||
				set -- "$@" "$ns"
		done
		ucr set dns/forwarder1="${1:-}" dns/forwarder2="${2:-}" dns/forwarder3="${3:-}"
		# Tell proxy/samba4 named to reload configuration
		rndc reconfig || :

	# Bug 44462: add new mode
	elif ( . /usr/share/univention-lib/ucr.sh ; is_ucr_true "nameserver/external" )
	then
		return 0  # do not touch /etc/resolv.conf at all
	elif true  # Bug 44462: DHCP provided DNS servers are NOT copied into UCR; /etc/resolv.conf gets overwritten if any UCRV changes; this looses the DHCP provided DNS servers!
	then
		# Prefer locally configured NS from UCR before DHCP
		for ns in $nameserver3 $nameserver2 $nameserver1  # reverse order for prepending
		do
			case "$ns" in
			'') ;;
			*:*)  # IPv6
				ns="$(link_local "$ns")"
				ns_in_list "$ns" "$new_dhcp6_name_servers" ||
					new_dhcp6_name_servers="$ns${new_dhcp6_name_servers:+ $new_dhcp6_name_servers}"
				;;
			*)  # IPv4
				ns_in_list "$ns" "$new_domain_name_servers" ||
					new_domain_name_servers="$ns${new_domain_name_servers:+ $new_domain_name_servers}"
				;;
			esac
		done
		ucs_orig_make_resolv_conf
	elif [ -n "$new_domain_search" ] || [ -n "$new_domain_name" ] || [ -n "$new_domain_name_servers" ]
	then
		set -- ${new_domain_name_servers:-}  # IFS
		ucr set domain/domainname="$new_domain_name" domain/search="$new_domain_search" nameserver1="${1:-}" nameserver2="${2:-}" nameserver3="${3:-}"
	elif [ -n "$new_dhcp6_domain_search" ] || [ -n "$new_dhcp6_name_servers" ]
	then
		for ns in ${new_dhcp6_name_servers:-}  # IFS
		do
			set -- ${1:+"$@"} "$(link_local "$ns")"
		done
		ucr set domain/domainname= domain/search="$new_dhcp6_domain_search" nameserver1="${1:-}" nameserver2="${2:-}" nameserver3="${3:-}"
	fi
}
ns_in_list () {
	case "$2" in
	"$1 "*|*" $1 "*|*" $1") return 0 ;;
	*) return 1 ;;
	esac
}
link_local () {  # append "%interface" to link-local-address
	case "$1" in
	[fF][eE]80:*) echo "${1}%${interface}" ;;
	*) echo "$1" ;;
	esac
}
