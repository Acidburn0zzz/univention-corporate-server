#!/bin/bash
#
# UCS - univention-saml-kerberos integration - domain integration
#  join script
#
# Copyright 2018 Univention GmbH
#
# http://www.univention.de/
#
# All rights reserved.
#
# The source code of this program is made available
# under the terms of the GNU Affero General Public License version 3
# (GNU AGPL V3) as published by the Free Software Foundation.
#
# Binary versions of this program provided by Univention to you as
# well as other copyrighted, protected or trademarked materials like
# Logos, graphics, fonts, specific documentations and configurations,
# cryptographic keys etc. are subject to a license agreement between
# you and Univention and not subject to the GNU AGPL V3.
#
# In the case you use this program under the terms of the GNU AGPL V3,
# the program is provided in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
# GNU Affero General Public License for more details.
#
# You should have received a copy of the GNU Affero General Public
# License with the Debian GNU/Linux or Univention distribution in file
# /usr/share/common-licenses/AGPL-3; if not, see
# <http://www.gnu.org/licenses/>.

VERSION="1"

. /usr/share/univention-lib/all.sh
. /usr/share/univention-join/joinscripthelper.lib
joinscript_init

extract_binddn_and_bindpwd_from_args() {
	## parse binddn and bindpwd from command line arguments into shell variables
	while [ $# -gt 0 ]; do
		case "$1" in
			"--binddn")
							binddn="${2:?missing binddn}"
							shift 2 || exit 2
							;;
			"--bindpwd")
							bindpwd="${2:?missing bindpwd}"
							shift 2 || exit 2
							;;
			*)
				shift
				;;
		esac
	done
}

eval "$(ucr shell)"

spn_account_name="ucs-sso"
servicePrincipalName="HTTP/$spn_account_name.$domainname"
privateKeytab_filename="simplesamlphp.keytab"
privateKeytab_path="/etc/simplesamlphp/$privateKeytab_filename"

spn_account_name_password=$(create_machine_password)

udm users/user create "$@" --ignore_exists \
		--position "cn=users,$ldap_base" \
		--set username="$spn_account_name" \
		--set lastname="SSO" \
		--set password="$spn_account_name_password" || die

extract_binddn_and_bindpwd_from_args "$@"
test -z "$binddn" && binddn="cn=admin,$ldap_base"
test -z "$bindpwd" && bindpwd="$(cat /etc/ldap.secret)"

ldapmodify -x -h "$ldap_master" -p "${ldap_master_port:-7389}" -D "$binddn" -w "$bindpwd" <<%EOF
dn: uid=ucs-sso,cn=users,$ldap_base
changetype: modify
replace: krb5PrincipalName
krb5PrincipalName: $servicePrincipalName
%EOF

if [ -n "$samba4_role" ]; then
	spn_secrets_ldif=$(ldbsearch -H /var/lib/samba/private/secrets.ldb "(servicePrincipalName=$servicePrincipalName)" \
			| ldapsearch-wrapper | ldapsearch-decode64)
	previous_spn_secrets_password=$(sed -n 's/^secret: //p' <<<"$spn_secrets_ldif")

	spn_account_dn=""
	i=0
	[ -z "$spn_account_dn" ] && echo "Waiting for user replication..."
	while [ -z "$spn_account_dn" ]; do
		spn_account_dn=$(ldbsearch -H /var/lib/samba/private/sam.ldb "(servicePrincipalName=$servicePrincipalName)" dn \
				| ldapsearch-wrapper | sed -n 's/^dn: //p')
		if [ -n "$spn_account_dn" ]; then
			break
		fi
		samba-tool spn add "$servicePrincipalName" "$spn_account_name"
		i=$((++i))
		if [ $i -gt 10 ]; then
			exit 1
		fi
		sleep 1
	done

	if [ -n "$spn_account_dn" ] && [ -n "$previous_spn_secrets_password" ]; then
		test_output=$(ldbsearch -k no -H ldap://$(hostname -f) -U"$spn_account_name" \
			--password="$previous_spn_secrets_password" -b "$spn_account_dn" -s base dn 2>/dev/null \
			| sed -n 's/^dn: //p')
		if [ -n "$test_output" ]; then
			## SPN account password ok, don't touch a running system.
			return
		fi
	fi

	samba-tool user setexpiry --noexpiry "$spn_account_name" || die

	# get msDS-KeyVersionNumber
	msdsKeyVersion=$(ldbsearch -H /var/lib/samba/private/sam.ldb  samAccountName="$spn_account_name" msDS-KeyVersionNumber \
					| sed -n 's/^msDS-KeyVersionNumber: \(.*\)/\1/p')
	if [ -z "$msdsKeyVersion" ]; then
		echo "ERROR: Could not determine msDS-KeyVersionNumber of $spn_account_name account!"
		exit 1
	fi
	
	spn_secrets_dn=$(sed -n 's/^dn: //p' <<<"$spn_secrets_ldif")
	if [ -z "$spn_secrets_dn" ]; then
		ldbadd -H /var/lib/samba/private/secrets.ldb <<-%EOF
		dn: samAccountName=$spn_account_name,CN=Principals
		objectClass: kerberosSecret
		privateKeytab: $privateKeytab_filename
		realm: $kerberos_realm
		sAMAccountName: $spn_account_name
		secret: $spn_account_name_password
		servicePrincipalName: $servicePrincipalName
		name: $spn_account_name
		msDS-KeyVersionNumber: $msdsKeyVersion
		saltPrincipal: $spn_account_name@$kerberos_realm
		%EOF
	else
		echo -n "Saving password for $spn_account_name account: "
		ldbmodify -H /var/lib/samba/private/secrets.ldb <<-%EOF
		dn: $spn_secrets_dn
		changetype: modify
		replace: secret
		secret: $spn_account_name_password
		-
		replace: msDS-KeyVersionNumber
		msDS-KeyVersionNumber: $msdsKeyVersion
		%EOF
	fi

	touch "$privateKeytab_path" || die
	chown root:samlcgi "$privateKeytab_path" || die
	chmod 640 "$privateKeytab_path" || die
	cp "/var/lib/samba/private/$privateKeytab_filename" "$privateKeytab_path" || die
else
	kadmin -l ext --keytab="/etc/simplesamlphp/$privateKeytab_filename" "$servicePrincipalName" || die
fi

joinscript_save_current_version
exit 0
