@%@UCRWARNING=# @%@

@!@
import os.path
certificate = configRegistry.get('saml/idp/certificate/certificate', '')
if os.path.isfile(certificate):
	print "Alias /simplesamlphp/saml2/idp/certificate %s" % (certificate,)
	print """<Directory "{}">
        <Files "{}">
                Require all granted
        </Files>
</Directory>
""".format(os.path.dirname(certificate), os.path.basename(certificate))
@!@
Alias /simplesamlphp /usr/share/simplesamlphp/www

@!@
if configRegistry.is_true('saml/idp/https'):
	print '''RewriteEngine On
RewriteCond %{HTTPS} !=on
RewriteRule ^/?simplesamlphp/(.*) https://%{SERVER_NAME}/simplesamlphp/$1 [R,L]
'''
@!@

<Directory /usr/share/simplesamlphp/www/>
	<FilesMatch ".+\.ph(p[345]?|t|tml)$">
		SetHandler php5-cgi
	</FilesMatch>
	Action php5-cgi /saml-bin/php-cgi

	Order allow,deny
	Allow from all
</Directory>
<Directory /var/www/saml/>
	Options -Indexes
</Directory>
@!@
sso_fqdn = configRegistry.get('ucs/server/sso/fqdn', 'ucs-sso.%s' % configRegistry.get('domainname'))
ssofqdn = {'ssofqdn': sso_fqdn}
import os.path
enable_virtualhost = configRegistry.is_true('ucs/server/sso/virtualhost', True)
if enable_virtualhost and os.path.isfile('/etc/univention/ssl/%(ssofqdn)s/cert.pem' % ssofqdn) and os.path.isfile('/etc/univention/ssl/%(ssofqdn)s/private.key' % ssofqdn):
	ssofqdn.update(dict(
		ssl_certificate=configRegistry.get('saml/apache2/ssl/certificate', '/etc/univention/ssl/%(ssofqdn)s/cert.pem' % ssofqdn),
		ssl_certificate_key=configRegistry.get('saml/apache2/ssl/key', '/etc/univention/ssl/%(ssofqdn)s/private.key' % ssofqdn),
		ssl_ca_certificate=configRegistry.get('saml/apache2/ssl/ca', '/etc/univention/ssl/ucsCA/CAcert.pem'),
		ssl_certificate_chain='',
	))
	if configRegistry.get('saml/apache2/ssl/certificatechain'):
		ssofqdn['ssl_certificate_chain'] = '	SSLCertificateChainFile %s' % configRegistry.get('saml/apache2/ssl/certificatechain')
	print '''
<IfModule mod_ssl.c>
<VirtualHost *:443>
	SSLEngine on
	SSLProxyEngine on
	ServerName %(ssofqdn)s
	SSLCertificateFile %(ssl_certificate)s
	SSLCertificateKeyFile %(ssl_certificate_key)s
	SSLCACertificateFile %(ssl_ca_certificate)s
	%(ssl_certificate_chain)s
	DocumentRoot /var/www/
	RedirectMatch ^/$ /simplesamlphp/

	ScriptAlias /saml-bin /var/www/saml
	SuexecUserGroup samlcgi samlcgi
	SetEnvIf Authorization "(.*)" HTTP_AUTHORIZATION=$1
	Include /etc/apache2/sites-available/univention-proxy.conf
</VirtualHost>
<VirtualHost *:80>
	ServerName %(ssofqdn)s
	DocumentRoot /var/www/
	RedirectMatch ^/$ /simplesamlphp/

	ScriptAlias /saml-bin /var/www/saml
	SuexecUserGroup samlcgi samlcgi
	SetEnvIf Authorization "(.*)" HTTP_AUTHORIZATION=$1
	Include /etc/apache2/sites-available/univention-proxy.conf
</VirtualHost>
</IfModule>
''' % ssofqdn

# If a single FQDN is required for SSO, the virtualhost directive above is deactivated.
# However, we need the suexec features, so activate them globally (does not work for Directory)
# Warning: This interferes with other programs that use cgi scripts.
elif not enable_virtualhost:
	print '''
ScriptAlias /saml-bin /var/www/saml
SuexecUserGroup samlcgi samlcgi
SetEnvIf Authorization "(.*)" HTTP_AUTHORIZATION=$1'''
@!@
